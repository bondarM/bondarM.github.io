{"version":3,"sources":["Components/MenuRgb.js","Components/MenuColors.js","pages/ColorPicker.js","App.js","reportWebVitals.js","index.js"],"names":["MenuRgb","props","className","htmlFor","type","min","max","id","step","defaultValue","onClick","cancelColor","applyColor","Colors","selectColor","ColorPicker","colorSquare","r","g","b","inpColor","useState","menuColor","setMenuColor","menuRgb","setMenuRgb","beforeColor","setBeforeColor","inputCol","useRef","setRangeColor","rgb","document","querySelector","value","setColor","r_hexVal","parseInt","toString","g_hexVal","b_hexVal","hexVal","pad","style","backgroundColor","useEffect","current","addEventListener","hexToRgb","hex","replace","m","substring","match","map","x","n","length","rgb2hex","slice","classList","remove","e","target","contains","ref","spellCheck","placeholder","readOnly","rgbmenu","add","getComputedStyle","elem","children","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d8b4b73d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function MenuRgb(props) {\r\n    return (\r\n        <div className=\"rgb__menu\">\r\n                    <div>\r\n                        <label htmlFor=\"r\">R</label>\r\n                        <input type=\"range\" min=\"0\" max=\"255\" id=\"r\" step=\"1\" defaultValue=\"255\" />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label htmlFor=\"g\">G</label>\r\n                        <input type=\"range\" min=\"0\" max=\"255\" id=\"g\" step=\"1\" defaultValue=\"255\" />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label className=\"l_b\" htmlFor=\"b\">B</label>\r\n                        <input type=\"range\" min=\"0\" max=\"255\" id=\"b\" step=\"1\" defaultValue=\"0\" />\r\n                    </div>\r\n\r\n                    <div className=\"btn__block\">\r\n                        <div onClick={props.cancelColor} className=\"btn__cancel btn\">CANCEL</div>\r\n                        <div onClick={props.applyColor} className=\"btn__ok btn\">OK</div>\r\n                    </div>\r\n                </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Colors(props) {\r\n    return (\r\n        <div onClick={props.selectColor} className=\"menu__color\">\r\n                        <div>\r\n                            red\r\n                            <div className=\"clr__ex red\"></div>\r\n                        </div>\r\n                        <div>\r\n                            yellow\r\n                            <div className=\"clr__ex\"></div>\r\n                        </div>\r\n                        <div>\r\n                            green\r\n                            <div className=\"clr__ex green\"></div>\r\n                        </div>\r\n                        <div>\r\n                            blue\r\n                            <div className=\"clr__ex blue\"></div>\r\n                        </div>\r\n                    </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport MenuRgb from '../Components/MenuRgb'\r\nimport MenuColors from '../Components/MenuColors'\r\n\r\nexport default function ColorPicker() {\r\n\r\n    const [menuColor, setMenuColor] = useState(false)\r\n    const [menuRgb, setMenuRgb] = useState(false)\r\n    const [beforeColor, setBeforeColor] = useState(\"\")\r\n\r\n    const inputCol = useRef(null)\r\n\r\n    let colorSquare\r\n    let r\r\n    let g\r\n    let b\r\n    let inpColor\r\n\r\n    useEffect(() => {\r\n        colorSquare = document.querySelector(\".color\")\r\n        r = document.querySelector('#r')\r\n        g = document.querySelector('#g')\r\n        b = document.querySelector('#b')\r\n        inpColor = inputCol.current\r\n\r\n        r.addEventListener('input', function () {\r\n            setColor();\r\n        }, false);\r\n\r\n        g.addEventListener('input', function () {\r\n            setColor();\r\n        }, false);\r\n\r\n        b.addEventListener('input', function () {\r\n            setColor();\r\n        }, false);\r\n\r\n    }, [])\r\n\r\n\r\n    function selectColor(e) {\r\n        let elem\r\n        if (e.target.children[0]) {\r\n            elem = e.target.children[0]\r\n        } else elem = e.target\r\n        setMenuColor(!menuColor)\r\n        document.querySelector(\".color\").style.backgroundColor = rgb2hex(getComputedStyle(elem).backgroundColor)\r\n        document.querySelector(\".inp__color\").value = rgb2hex(getComputedStyle(elem).backgroundColor)\r\n        setRangeColor(hexToRgb(`${rgb2hex(getComputedStyle(elem).backgroundColor)}`))\r\n    }\r\n\r\n\r\n    function setRangeColor(rgb) {\r\n        document.querySelector('#r').value = rgb[0]\r\n        document.querySelector('#g').value = rgb[1]\r\n        document.querySelector('#b').value = rgb[2]\r\n    }\r\n\r\n\r\n    ///////////////////////////////////formater\r\n    function setColor() {\r\n        let r_hexVal = parseInt(r.value, 10).toString(16),\r\n            g_hexVal = parseInt(g.value, 10).toString(16),\r\n            b_hexVal = parseInt(b.value, 10).toString(16),\r\n            hexVal = \"#\" + pad(r_hexVal) + pad(g_hexVal) + pad(b_hexVal);\r\n        colorSquare.style.backgroundColor = hexVal;\r\n        inpColor.value = hexVal;\r\n    }\r\n\r\n    const hexToRgb = hex =>\r\n        hex.replace(/^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i\r\n            , (m, r, g, b) => '#' + r + r + g + g + b + b)\r\n            .substring(1).match(/.{2}/g)\r\n            .map(x => parseInt(x, 16))\r\n    function pad(n) {\r\n        return (n.length < 2) ? \"0\" + n : n;\r\n    }\r\n\r\n    function rgb2hex(rgb) {\r\n        rgb = rgb.match(/^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+))?\\)$/);\r\n        function hex(x) {\r\n            return (\"0\" + parseInt(x).toString(16)).slice(-2);\r\n        }\r\n        return \"#\" + hex(rgb[1]) + hex(rgb[2]) + hex(rgb[3]);\r\n    }\r\n\r\n\r\n\r\n    /////////////////////////////////////////// rgbmenu\r\n    function rgbOpen() {\r\n        setMenuRgb(!menuRgb)\r\n        setMenuColor(false)\r\n        let rgbmenu = document.querySelector(\".rgb__menu\")\r\n        menuRgb ? rgbmenu.classList.remove(\"open\") : rgbmenu.classList.add(\"open\")\r\n\r\n        setBeforeColor(getComputedStyle(document.querySelector(\".color\")).backgroundColor)\r\n    }\r\n\r\n    function colorOpen() {\r\n        setMenuColor(!menuColor)\r\n        setMenuRgb(false)\r\n        document.querySelector(\".rgb__menu\").classList.remove(\"open\")\r\n    }\r\n\r\n    //////////////////////// closeButton\r\n    function cancelColor() {\r\n        setMenuRgb(false)\r\n        document.querySelector(\".color\").style.backgroundColor = beforeColor\r\n        document.querySelector(\".rgb__menu\").classList.remove(\"open\")\r\n        setRangeColor(hexToRgb(`${rgb2hex(beforeColor)}`))\r\n        inputCol.current.value = `${rgb2hex(beforeColor)}`\r\n    }\r\n\r\n    function applyColor() {\r\n        setMenuRgb(false)\r\n        document.querySelector(\".rgb__menu\").classList.remove(\"open\")\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////closeOutside\r\n\r\n    function closeAll(e) {\r\n        if (e.target.classList.contains(\"wrapp\")) {\r\n            if (menuRgb) {\r\n                cancelColor()\r\n            }\r\n            else if (menuColor) {\r\n                setMenuColor(false)\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div onClick={closeAll} className=\"wrapp\">\r\n\r\n            <div className=\"wrapp__center\">\r\n                <div className=\"block__edit__nav\">\r\n                    <input ref={inputCol} type=\"text\" className=\"inp__color\" spellCheck=\"false\" placeholder=\"Color\" id=\"inputText\" readOnly={true} defaultValue=\"#ffed00\" />\r\n                    <div onClick={rgbOpen} className=\"square__color\"><div className=\"color\"></div></div>\r\n                    <div onClick={colorOpen} className=\"drop__block\"> <div className=\"arrow__drop\"></div> </div>\r\n                </div>\r\n\r\n                {menuColor ? <MenuColors selectColor={selectColor} /> : \"\"}\r\n\r\n                <MenuRgb applyColor={applyColor} cancelColor={cancelColor} />\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport ColorPicker from './pages/ColorPicker';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <ColorPicker />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}